use std::collections::HashMap;

pub fn get_package_manager(distro: &str) -> Option<&'static str> {
    let package_managers: HashMap<&str, &str> = HashMap::from([
        ("AIX", "installp"),
        ("AlmaLinux", "dnf"),
        ("Alpaquita Linux", "apk"),
        ("Alpine Linux", "apk"),
        ("Amazon Linux AMI", "yum"),
        ("Android", "pkg"),
        ("Arch Linux", "pacman"),
        ("Artix Linux", "pacman"),
        ("CachyOS", "pacman"),
        ("CentOS", "dnf"),
        ("Debian", "apt"),
        ("DragonFly BSD", "pkg"),
        ("Emscripten", "emsdk"),
        ("EndeavourOS", "pacman"),
        ("Fedora", "dnf"),
        ("FreeBSD", "pkg"),
        ("Garuda Linux", "pacman"),
        ("Gentoo Linux", "portage/emerge"),
        ("HardenedBSD", "pkg"),
        ("illumos", "pkgin"),
        ("Kali Linux", "apt"),
        ("Linux", "varies"),
        ("Mabox", "pacman"),
        ("Manjaro", "pacman"),
        ("Mariner", "tdnf"),
        ("MidnightBSD", "mport"),
        ("Mint", "apt"),
        ("NetBSD", "pkgin"),
        ("NixOS", "nix"),
        ("Nobara Linux", "dnf"),
        ("OpenBSD", "pkg_add"),
        ("OpenCloudOS", "dnf"),
        ("openEuler (EulerOS)", "dnf"),
        ("openSUSE", "zypper"),
        ("Oracle Linux", "dnf"),
        ("Pop!_OS", "apt"),
        ("Raspberry Pi OS", "apt"),
        ("Red Hat Linux", "rpm"),
        ("Red Hat Enterprise Linux", "dnf"),
        ("Redox", "pkg"),
        ("Rocky Linux", "dnf"),
        ("Solus", "eopkg"),
        ("SUSE Linux Enterprise Server", "zypper"),
        ("Ubuntu", "apt"),
        ("Ultramarine Linux", "dnf"),
        ("Unknown", "unknown"),
        ("Void Linux", "xbps"),
    ]);

    package_managers.get(distro).copied()
}
